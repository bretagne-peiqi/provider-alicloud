/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BabelfishConfigObservation struct {
}

type BabelfishConfigParameters struct {

	// specifies whether to enable the Babelfish for the instance. If you set this parameter to true, you enable Babelfish for the instance. If you leave this parameter empty, you disable Babelfish for the instance.
	// +kubebuilder:validation:Required
	BabelfishEnabled *string `json:"babelfishEnabled" tf:"babelfish_enabled,omitempty"`

	// The password of the administrator account. The password must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. It must be 8 to 32 characters in length. The password can contain any of the following characters:! @ # $ % ^ & * () _ + - =
	// +kubebuilder:validation:Required
	MasterUserPassword *string `json:"masterUserPassword" tf:"master_user_password,omitempty"`

	// The name of the administrator account. The name can contain lowercase letters, digits, and underscores (_). It must start with a letter and end with a letter or digit. It can be up to 63 characters in length and cannot start with pg.
	// +kubebuilder:validation:Required
	MasterUsername *string `json:"masterUsername" tf:"master_username,omitempty"`

	// The migration mode of the instance. Valid values: single-db and multi-db.
	// +kubebuilder:validation:Required
	MigrationMode *string `json:"migrationMode" tf:"migration_mode,omitempty"`
}

type DbInstanceObservation struct {

	// RDS database connection string.
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// The RDS instance ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Status of the SSL feature. Yes: SSL is turned on; No: SSL is turned off.
	SSLStatus *string `json:"sslStatus,omitempty" tf:"ssl_status,omitempty"`
}

type DbInstanceParameters struct {

	// The method that is used to verify the identities of clients. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
	// +kubebuilder:validation:Optional
	ACL *string `json:"acl,omitempty" tf:"acl,omitempty"`

	// Whether to renewal a DB instance automatically or not. It is valid when instance_charge_type is PrePaid. Default to false.
	// +kubebuilder:validation:Optional
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Auto-renewal period of an instance, in the unit of the month. It is valid when instance_charge_type is PrePaid. Valid value:[1~12], Default to 1.
	// +kubebuilder:validation:Optional
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// The upgrade method to use. Valid values:
	// +kubebuilder:validation:Optional
	AutoUpgradeMinorVersion *string `json:"autoUpgradeMinorVersion,omitempty" tf:"auto_upgrade_minor_version,omitempty"`

	// The configuration of an ApsaraDB RDS for PostgreSQL instance for which Babelfish is enabled. (documented below).
	// +kubebuilder:validation:Optional
	BabelfishConfig []BabelfishConfigParameters `json:"babelfishConfig,omitempty" tf:"babelfish_config,omitempty"`

	// The TDS port of the instance for which Babelfish is enabled.
	// +kubebuilder:validation:Optional
	BabelfishPort *string `json:"babelfishPort,omitempty" tf:"babelfish_port,omitempty"`

	// The type of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the SSLEnabled parameter to 1, the default value of this parameter is aliyun. Value range:
	// +kubebuilder:validation:Optional
	CAType *string `json:"caType,omitempty" tf:"ca_type,omitempty"`

	// The public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCAEbabled parameter to 1, you must also specify this parameter.
	// +kubebuilder:validation:Optional
	ClientCACert *string `json:"clientCaCert,omitempty" tf:"client_ca_cert,omitempty"`

	// Specifies whether to enable the public key of the CA that issues client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. Valid values:
	// +kubebuilder:validation:Optional
	ClientCAEnabled *float64 `json:"clientCaEnabled,omitempty" tf:"client_ca_enabled,omitempty"`

	// The CRL that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the ClientCrlEnabled parameter to 1, you must also specify this parameter.
	// +kubebuilder:validation:Optional
	ClientCertRevocationList *string `json:"clientCertRevocationList,omitempty" tf:"client_cert_revocation_list,omitempty"`

	// Specifies whether to enable a certificate revocation list (CRL) that contains revoked client certificates. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
	// +kubebuilder:validation:Optional
	ClientCrlEnabled *float64 `json:"clientCrlEnabled,omitempty" tf:"client_crl_enabled,omitempty"`

	// The private connection string prefix. If you want to update public connection string prefix, please use resource alicloud_db_connection connection_prefix.
	// -> NOTE: The prefix must be 8 to 64 characters in length and can contain letters, digits, and hyphens (-). It cannot contain Chinese characters and special characters ~!#%^&*=+|{};:'",<>/?
	// +kubebuilder:validation:Optional
	ConnectionStringPrefix *string `json:"connectionStringPrefix,omitempty" tf:"connection_string_prefix,omitempty"`

	// The attribute of the IP address whitelist. By default, this parameter is empty.
	// +kubebuilder:validation:Optional
	DBInstanceIPArrayAttribute *string `json:"dbInstanceIpArrayAttribute,omitempty" tf:"db_instance_ip_array_attribute,omitempty"`

	// The name of the IP address whitelist. Default value: Default.
	// +kubebuilder:validation:Optional
	DBInstanceIPArrayName *string `json:"dbInstanceIpArrayName,omitempty" tf:"db_instance_ip_array_name,omitempty"`

	// The storage type of the instance. Valid values:
	// +kubebuilder:validation:Optional
	DBInstanceStorageType *string `json:"dbInstanceStorageType,omitempty" tf:"db_instance_storage_type,omitempty"`

	// Specifies whether table names on the instance are case-sensitive. Valid values: true, false.
	// +kubebuilder:validation:Optional
	DBIsIgnoreCase *bool `json:"dbIsIgnoreCase,omitempty" tf:"db_is_ignore_case,omitempty"`

	// The time zone of the instance. This parameter takes effect only when you set the Engine parameter to MySQL or PostgreSQL.
	// +kubebuilder:validation:Optional
	DBTimeZone *string `json:"dbTimeZone,omitempty" tf:"db_time_zone,omitempty"`

	// The switch of delete protection. Valid values:
	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// The key id of the KMS. Used for encrypting a disk if not null. Only for PostgreSQL, MySQL and SQLServer.
	// +kubebuilder:validation:Optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// Database type. Value options: MySQL, SQLServer, PostgreSQL, and PPAS.
	// +kubebuilder:validation:Required
	Engine *string `json:"engine" tf:"engine,omitempty"`

	// Database version. Value options can refer to the latest docs CreateDBInstance EngineVersion.
	// +kubebuilder:validation:Required
	EngineVersion *string `json:"engineVersion" tf:"engine_version,omitempty"`

	// Set it to true to make some parameter efficient when modifying them. Default to false.
	// +kubebuilder:validation:Optional
	ForceRestart *bool `json:"forceRestart,omitempty" tf:"force_restart,omitempty"`

	// The read-only instances to which you want to synchronize the IP address whitelist.
	// +kubebuilder:validation:Optional
	FreshWhiteListReadins *string `json:"freshWhiteListReadins,omitempty" tf:"fresh_white_list_readins,omitempty"`

	// The primary/secondary switchover mode of the instance. Default value: Auto. Valid values:
	// +kubebuilder:validation:Optional
	HaConfig *string `json:"haConfig,omitempty" tf:"ha_config,omitempty"`

	// Valid values are Prepaid, Postpaid, Default to Postpaid. Currently, the resource only supports PostPaid to PrePaid.
	// +kubebuilder:validation:Optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// The name of DB instance. It a string of 2 to 256 characters.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// User-defined DB instance storage space. Value range:
	// +kubebuilder:validation:Required
	InstanceStorage *float64 `json:"instanceStorage" tf:"instance_storage,omitempty"`

	// DB Instance type. For details, see Instance type table.
	// +kubebuilder:validation:Required
	InstanceType *string `json:"instanceType" tf:"instance_type,omitempty"`

	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	// +kubebuilder:validation:Optional
	MaintainTime *string `json:"maintainTime,omitempty" tf:"maintain_time,omitempty"`

	// The time after when you want to enable automatic primary/secondary switchover. At most, you can set this parameter to 23:59:59 seven days later. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
	// +kubebuilder:validation:Optional
	ManualHaTime *string `json:"manualHaTime,omitempty" tf:"manual_ha_time,omitempty"`

	// The method that is used to modify the IP address whitelist. Default value: Cover. Valid values:
	// +kubebuilder:validation:Optional
	ModifyMode *string `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// The monitoring frequency in seconds. Valid values are 5, 60, 300. Defaults to 300.
	// +kubebuilder:validation:Optional
	MonitoringPeriod *float64 `json:"monitoringPeriod,omitempty" tf:"monitoring_period,omitempty"`

	// Set of parameters needs to be set after DB instance was launched. Available parameters can refer to the latest docs View database parameter templates .
	// +kubebuilder:validation:Optional
	Parameters []ParametersParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// The duration that you will buy DB instance (in month). It is valid when instance_charge_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	// -> NOTE: The attribute period is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The configuration of AD domain (documented below).
	// +kubebuilder:validation:Optional
	PgHbaConf []PgHbaConfParameters `json:"pgHbaConf,omitempty" tf:"pg_hba_conf,omitempty"`

	// The private port of the database service. If you want to update public port, please use resource alicloud_db_connection port.
	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// The private IP address of the instance. The private IP address must be within the Classless Inter-Domain Routing (CIDR) block of the vSwitch that is specified by the VSwitchId parameter.
	// +kubebuilder:validation:Optional
	PrivateIPAddress *string `json:"privateIpAddress,omitempty" tf:"private_ip_address,omitempty"`

	// The policy based on which ApsaraDB RDS retains archived backup files after the instance is released. Valid values:
	// +kubebuilder:validation:Optional
	ReleasedKeepPolicy *string `json:"releasedKeepPolicy,omitempty" tf:"released_keep_policy,omitempty"`

	// The method that is used to verify the replication permission. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. In addition, this parameter is available only when the public key of the CA that issues client certificates is enabled. Valid values:
	// +kubebuilder:validation:Optional
	ReplicationACL *string `json:"replicationAcl,omitempty" tf:"replication_acl,omitempty"`

	// The ID of resource group which the DB instance belongs.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The sql collector keep time of the instance. Valid values are 30, 180, 365, 1095, 1825, Default to 30.
	// +kubebuilder:validation:Optional
	SQLCollectorConfigValue *float64 `json:"sqlCollectorConfigValue,omitempty" tf:"sql_collector_config_value,omitempty"`

	// The sql collector status of the instance. Valid values are Enabled, Disabled, Default to Disabled.
	// +kubebuilder:validation:Optional
	SQLCollectorStatus *string `json:"sqlCollectorStatus,omitempty" tf:"sql_collector_status,omitempty"`

	// Actions performed on SSL functions, Valid values: Open: turn on SSL encryption; Close: turn off SSL encryption; Update: update SSL certificate. See more engine and engineVersion limitation.
	// +kubebuilder:validation:Optional
	SSLAction *string `json:"sslAction,omitempty" tf:"ssl_action,omitempty"`

	// (Deprecated) It has been deprecated from 1.69.0 and use security_group_ids instead.
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// , Available in 1.69.0+) The list IDs to join ECS Security Group. At most supports three security groups.
	// +kubebuilder:validation:Optional
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Valid values are normal, safety, Default to normal. support safety switch to high security access mode.
	// +kubebuilder:validation:Optional
	SecurityIPMode *string `json:"securityIpMode,omitempty" tf:"security_ip_mode,omitempty"`

	// The type of IP address in the IP address whitelist.
	// +kubebuilder:validation:Optional
	SecurityIPType *string `json:"securityIpType,omitempty" tf:"security_ip_type,omitempty"`

	// List of IP addresses allowed to access all databases of an instance. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
	// +kubebuilder:validation:Optional
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// The content of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
	// +kubebuilder:validation:Optional
	ServerCert *string `json:"serverCert,omitempty" tf:"server_cert,omitempty"`

	// The private key of the server certificate. This parameter is supported only when the instance runs PostgreSQL with standard or enhanced SSDs. If you set the CAType parameter to custom, you must also specify this parameter.
	// +kubebuilder:validation:Optional
	ServerKey *string `json:"serverKey,omitempty" tf:"server_key,omitempty"`

	// Automatic storage space expansion switch. Valid values:
	// +kubebuilder:validation:Optional
	StorageAutoScale *string `json:"storageAutoScale,omitempty" tf:"storage_auto_scale,omitempty"`

	// The trigger threshold (percentage) for automatic storage space expansion. Valid values:
	// +kubebuilder:validation:Optional
	StorageThreshold *float64 `json:"storageThreshold,omitempty" tf:"storage_threshold,omitempty"`

	// The upper limit of the total storage space for automatic expansion of the storage space, that is, automatic expansion will not cause the total storage space of the instance to exceed this value. Unit: GB. The value must be ≥0.
	// +kubebuilder:validation:Optional
	StorageUpperBound *float64 `json:"storageUpperBound,omitempty" tf:"storage_upper_bound,omitempty"`

	// The specific point in time when you want to perform the update. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. It is valid only when upgrade_db_instance_kernel_version = true. The time must be in UTC.
	// +kubebuilder:validation:Optional
	SwitchTime *string `json:"switchTime,omitempty" tf:"switch_time,omitempty"`

	// The availability check method of the instance. Valid values:
	// +kubebuilder:validation:Optional
	TCPConnectionType *string `json:"tcpConnectionType,omitempty" tf:"tcp_connection_type,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The minor engine version to which you want to update the instance. If you do not specify this parameter, the instance is updated to the latest minor engine version. It is valid only when upgrade_db_instance_kernel_version = true. You must specify the minor engine version in one of the following formats:
	// +kubebuilder:validation:Optional
	TargetMinorVersion *string `json:"targetMinorVersion,omitempty" tf:"target_minor_version,omitempty"`

	// The TDE(Transparent Data Encryption) status. See more engine and engineVersion limitation.
	// +kubebuilder:validation:Optional
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Whether to upgrade a minor version of the kernel. Valid values:
	// +kubebuilder:validation:Optional
	UpgradeDBInstanceKernelVersion *bool `json:"upgradeDbInstanceKernelVersion,omitempty" tf:"upgrade_db_instance_kernel_version,omitempty"`

	// The method to update the minor engine version. Default value: Immediate. It is valid only when upgrade_db_instance_kernel_version = true. Valid values:
	// +kubebuilder:validation:Optional
	UpgradeTime *string `json:"upgradeTime,omitempty" tf:"upgrade_time,omitempty"`

	// (ForceNew) The virtual switch ID to launch DB instances in one VPC. If there are multiple vswitches, separate them with commas.
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// The network type of the IP address whitelist. Default value: MIX. Valid values:
	// +kubebuilder:validation:Optional
	WhitelistNetworkType *string `json:"whitelistNetworkType,omitempty" tf:"whitelist_network_type,omitempty"`

	// (ForceNew) The Zone to launch the DB instance. From version 1.8.1, it supports multiple zone.
	// If it is a multi-zone and vswitch_id is specified, the vswitch must in the one of them.
	// The multiple zone ID can be retrieved by setting multi to "true" in the data source alicloud_zones.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`

	// The region ID of the secondary instance if you create a secondary instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
	// +kubebuilder:validation:Optional
	ZoneIDSlaveA *string `json:"zoneIdSlaveA,omitempty" tf:"zone_id_slave_a,omitempty"`

	// The region ID of the log instance if you create a log instance. If you set this parameter to the same value as the ZoneId parameter, the instance is deployed in a single zone. Otherwise, the instance is deployed in multiple zones.
	// +kubebuilder:validation:Optional
	ZoneIDSlaveB *string `json:"zoneIdSlaveB,omitempty" tf:"zone_id_slave_b,omitempty"`
}

type ParametersObservation struct {
}

type ParametersParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type PgHbaConfObservation struct {
}

type PgHbaConfParameters struct {

	// The IP addresses from which the specified users can access the specified databases. If you set this parameter to 0.0.0.0/0, the specified users are allowed to access the specified databases from all IP addresses.
	// +kubebuilder:validation:Required
	Address *string `json:"address" tf:"address,omitempty"`

	// The name of the database that the specified users are allowed to access. If you set this parameter to all, the specified users are allowed to access all databases in the instance. If you specify multiple databases, separate the database names with commas (,).
	// +kubebuilder:validation:Required
	Database *string `json:"database" tf:"database,omitempty"`

	// The mask of the instance. If the value of the Address parameter is an IP address, you can use this parameter to specify the mask of the IP address.
	// +kubebuilder:validation:Optional
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// The authentication method of Lightweight Directory Access Protocol (LDAP). Valid values: trust, reject, scram-sha-256, md5, password, gss, sspi, ldap, radius, cert, pam.
	// +kubebuilder:validation:Required
	Method *string `json:"method" tf:"method,omitempty"`

	// Optional. The value of this parameter is based on the value of the HbaItem.N.Method parameter. In this topic, LDAP is used as an example. You must configure this parameter. For more information, see Authentication Methods.
	// +kubebuilder:validation:Optional
	Option *string `json:"option,omitempty" tf:"option,omitempty"`

	// The priority of an AD domain. If you set this parameter to 0, the AD domain has the highest priority. Valid values: 0 to 10000. This parameter is used to identify each AD domain. When you add an AD domain, the value of the PriorityId parameter of the new AD domain cannot be the same as the value of the PriorityId parameter for any existing AD domain. When you modify or delete an AD domain, you must also modify or delete the value of the PriorityId parameter for this AD domain.
	// +kubebuilder:validation:Required
	PriorityID *float64 `json:"priorityId" tf:"priority_id,omitempty"`

	// The type of connection to the instance. Valid values:
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`

	// The user that is allowed to access the instance. If you specify multiple users, separate the usernames with commas (,).
	// +kubebuilder:validation:Required
	User *string `json:"user" tf:"user,omitempty"`
}

// DbInstanceSpec defines the desired state of DbInstance
type DbInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DbInstanceParameters `json:"forProvider"`
}

// DbInstanceStatus defines the observed state of DbInstance.
type DbInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DbInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DbInstance is the Schema for the DbInstances API. Provides an RDS instance resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type DbInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DbInstanceSpec   `json:"spec"`
	Status            DbInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DbInstanceList contains a list of DbInstances
type DbInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DbInstance `json:"items"`
}

// Repository type metadata.
var (
	DbInstance_Kind             = "DbInstance"
	DbInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DbInstance_Kind}.String()
	DbInstance_KindAPIVersion   = DbInstance_Kind + "." + CRDGroupVersion.String()
	DbInstance_GroupVersionKind = CRDGroupVersion.WithKind(DbInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&DbInstance{}, &DbInstanceList{})
}
