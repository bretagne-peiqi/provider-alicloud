/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type KvStoreInstanceObservation struct {

	// The bandwidth.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Intranet connection address of the KVStore instance.
	ConnectionDomain *string `json:"connectionDomain,omitempty" tf:"connection_domain,omitempty"`

	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// The expiration time of the prepaid instance.
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// The ID of KVStore DBInstance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Theoretical maximum QPS value.
	QPS *float64 `json:"qps,omitempty" tf:"qps,omitempty"`

	// The status of KVStore DBInstance.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type KvStoreInstanceParameters struct {

	// Whether to renewal a KVStore DBInstance automatically or not. It is valid when payment_type is PrePaid. Default to false.
	// +kubebuilder:validation:Optional
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Auto-renewal period of an KVStore DBInstance, in the unit of the month. It is valid when payment_type is PrePaid. Valid value: [1~12], Default to 1.
	// +kubebuilder:validation:Optional
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// Specifies whether to use a coupon. Default to: false.
	// +kubebuilder:validation:Optional
	AutoUseCoupon *bool `json:"autoUseCoupon,omitempty" tf:"auto_use_coupon,omitempty"`

	// It has been deprecated from provider version 1.101.0 and zone_id instead.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// The ID of the backup file of the source instance.
	// +kubebuilder:validation:Optional
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Backup period.
	// +kubebuilder:validation:Optional
	BackupPeriod []*string `json:"backupPeriod,omitempty" tf:"backup_period,omitempty"`

	// Backup time, the format is HH:mmZ-HH:mmZ (UTC time).
	// +kubebuilder:validation:Optional
	BackupTime *string `json:"backupTime,omitempty" tf:"backup_time,omitempty"`

	// The ID of the event or the business information.
	// +kubebuilder:validation:Optional
	BusinessInfo *string `json:"businessInfo,omitempty" tf:"business_info,omitempty"`

	// The storage capacity of the KVStore DBInstance. Unit: MB.
	// +kubebuilder:validation:Optional
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// The configuration of the KVStore DBInstance. Available parameters can refer to the latest docs Instance configurations table .
	// +kubebuilder:validation:Optional
	Config map[string]*string `json:"config,omitempty" tf:"config,omitempty"`

	// It has been deprecated from provider version 1.101.0 and resource alicloud_kvstore_connection instead.
	// +kubebuilder:validation:Optional
	ConnectionStringPrefix *string `json:"connectionStringPrefix,omitempty" tf:"connection_string_prefix,omitempty"`

	// The coupon code. Default to: youhuiquan_promotion_option_id_for_blank.
	// +kubebuilder:validation:Optional
	CouponNo *string `json:"couponNo,omitempty" tf:"coupon_no,omitempty"`

	// The name of KVStore DBInstance. It is a string of 2 to 256 characters.
	// +kubebuilder:validation:Optional
	DBInstanceName *string `json:"dbInstanceName,omitempty" tf:"db_instance_name,omitempty"`

	// The ID of the dedicated cluster. This parameter is required when you create an ApsaraDB for Redis instance in a dedicated cluster.
	// +kubebuilder:validation:Optional
	DedicatedHostGroupID *string `json:"dedicatedHostGroupId,omitempty" tf:"dedicated_host_group_id,omitempty"`

	// Specifies whether to precheck the request. Valid values:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Turn on or off incremental backup. Valid values: 1, 0. Default to 0
	// +kubebuilder:validation:Optional
	EnableBackupLog *float64 `json:"enableBackupLog,omitempty" tf:"enable_backup_log,omitempty"`

	// It has been deprecated from provider version 1.101.0 and resource alicloud_kvstore_connection instead.
	// +kubebuilder:validation:Optional
	EnablePublic *bool `json:"enablePublic,omitempty" tf:"enable_public,omitempty"`

	// The engine version of the KVStore DBInstance. Valid values: ["2.8", "4.0", "5.0", "6.0"]. Default to "5.0".
	// NOTE: When instance_type = Memcache, the engine_version only supports "4.0".
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies whether to forcibly change the type. Default to: true.
	// +kubebuilder:validation:Optional
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Whether to create a distributed cache. Default to: false.
	// +kubebuilder:validation:Optional
	GlobalInstance *bool `json:"globalInstance,omitempty" tf:"global_instance,omitempty"`

	// The ID of distributed cache.
	// +kubebuilder:validation:Optional
	GlobalInstanceID *string `json:"globalInstanceId,omitempty" tf:"global_instance_id,omitempty"`

	// It has been deprecated from provider version 1.101.0 and payment_type instead.
	// +kubebuilder:validation:Optional
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// Type of the applied ApsaraDB for Redis instance. It can be retrieved by data source alicloud_kvstore_instance_classes
	// or referring to help-docs Instance type table.
	// +kubebuilder:validation:Optional
	InstanceClass *string `json:"instanceClass,omitempty" tf:"instance_class,omitempty"`

	// It has been deprecated from provider version 1.101.0 and db_instance_name instead.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Whether to open the release protection.
	// +kubebuilder:validation:Optional
	InstanceReleaseProtection *bool `json:"instanceReleaseProtection,omitempty" tf:"instance_release_protection,omitempty"`

	// The engine type of the KVStore DBInstance. Valid values: Redis or Memcache. Defaults to Redis.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// An KMS encrypts password used to an instance. If the password is filled in, this field will be ignored.
	// +kubebuilder:validation:Optional
	KMSEncryptedPassword *string `json:"kmsEncryptedPassword,omitempty" tf:"kms_encrypted_password,omitempty"`

	// An KMS encryption context used to decrypt kms_encrypted_password before creating or updating instance with kms_encrypted_password. See Encryption Context. It is valid when kms_encrypted_password is set.
	// +kubebuilder:validation:Optional
	KMSEncryptionContext map[string]*string `json:"kmsEncryptionContext,omitempty" tf:"kms_encryption_context,omitempty"`

	// The end time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	// +kubebuilder:validation:Optional
	MaintainEndTime *string `json:"maintainEndTime,omitempty" tf:"maintain_end_time,omitempty"`

	// The start time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	// +kubebuilder:validation:Optional
	MaintainStartTime *string `json:"maintainStartTime,omitempty" tf:"maintain_start_time,omitempty"`

	// The method of modifying the whitelist. Valid values: 0, 1 and 2. Default to 0. 0 means overwrites the original whitelist. 1 means adds the IP addresses to the whitelist. 2 means deletes the IP addresses from the whitelist.
	// +kubebuilder:validation:Optional
	ModifyMode *float64 `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// "Field 'node_type' has been deprecated from version 1.120.1". This parameter is determined by the instance_class.
	// +kubebuilder:validation:Optional
	NodeType *string `json:"nodeType,omitempty" tf:"node_type,omitempty"`

	// Specifies a change type when you change the configuration of a subscription instance. Valid values: UPGRADE, DOWNGRADE. Default to UPGRADE. UPGRADE means upgrades the configuration of a subscription instance. DOWNGRADE means downgrades the configuration of a subscription instance.
	// +kubebuilder:validation:Optional
	OrderType *string `json:"orderType,omitempty" tf:"order_type,omitempty"`

	// It has been deprecated from provider version 1.101.0 and config instead..
	// +kubebuilder:validation:Optional
	Parameters []ParametersParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// The password of the KVStore DBInstance. The password that is used to connect to the instance. The password must be 8 to 32 characters in length and must contain at least three of the following character types: uppercase letters, lowercase letters, special characters, and digits. Special characters include: ! @ # $ % ^ & * ( ) _ + - =
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// The billing method of the KVStore DBInstance. Valid values: PrePaid, PostPaid. Default to PostPaid.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The duration that you will buy KVStore DBInstance (in month). It is valid when payment_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`

	// It has been deprecated from provider version 1.101.0 and resource alicloud_kvstore_connection instead.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Private network connection port, used to modify the private network connection port.
	// +kubebuilder:validation:Optional
	PrivateConnectionPort *string `json:"privateConnectionPort,omitempty" tf:"private_connection_port,omitempty"`

	// Private network connection prefix, used to modify the private network connection address. Only supports updating private network connections for existing instance.
	// +kubebuilder:validation:Optional
	PrivateConnectionPrefix *string `json:"privateConnectionPrefix,omitempty" tf:"private_connection_prefix,omitempty"`

	// The internal IP address of the instance.
	// +kubebuilder:validation:Optional
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// The ID of resource group which the resource belongs.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The point in time of a backup file.
	// +kubebuilder:validation:Optional
	RestoreTime *string `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Modifies the SSL status. Valid values: Disable, Enable and Update.
	// Note: This functionality is supported by Cluster mode (Redis 2.8, 4.0, 5.0) and Standard mode( Redis 2.8 only)
	// +kubebuilder:validation:Optional
	SSLEnable *string `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// The ID of the secondary zone to which you want to migrate the ApsaraDB for Redis instance.
	// +kubebuilder:validation:Optional
	SecondaryZoneID *string `json:"secondaryZoneId,omitempty" tf:"secondary_zone_id,omitempty"`

	// The ID of security groups.
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
	// +kubebuilder:validation:Optional
	SecurityIPGroupAttribute *string `json:"securityIpGroupAttribute,omitempty" tf:"security_ip_group_attribute,omitempty"`

	// The name of the whitelist group.
	// +kubebuilder:validation:Optional
	SecurityIPGroupName *string `json:"securityIpGroupName,omitempty" tf:"security_ip_group_name,omitempty"`

	// The IP addresses in the whitelist group. The maximum number of IP addresses in the whitelist group is 1000.
	// +kubebuilder:validation:Optional
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// The ID of the source instance.
	// +kubebuilder:validation:Optional
	SrcdbInstanceID *string `json:"srcdbInstanceId,omitempty" tf:"srcdb_instance_id,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Only meaningful if instance_type is Redis and network type is VPC. Valid values: Close, Open. Defaults to Open.  Close means the redis instance can be accessed without authentication. Open means authentication is required.
	// +kubebuilder:validation:Optional
	VPCAuthMode *string `json:"vpcAuthMode,omitempty" tf:"vpc_auth_mode,omitempty"`

	// The ID of VSwitch.
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// The ID of the zone.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ParametersObservation struct {
}

type ParametersParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

// KvStoreInstanceSpec defines the desired state of KvStoreInstance
type KvStoreInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     KvStoreInstanceParameters `json:"forProvider"`
}

// KvStoreInstanceStatus defines the observed state of KvStoreInstance.
type KvStoreInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        KvStoreInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// KvStoreInstance is the Schema for the KvStoreInstances API. Provides an ApsaraDB Redis / Memcache instance resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type KvStoreInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              KvStoreInstanceSpec   `json:"spec"`
	Status            KvStoreInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// KvStoreInstanceList contains a list of KvStoreInstances
type KvStoreInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KvStoreInstance `json:"items"`
}

// Repository type metadata.
var (
	KvStoreInstance_Kind             = "KvStoreInstance"
	KvStoreInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: KvStoreInstance_Kind}.String()
	KvStoreInstance_KindAPIVersion   = KvStoreInstance_Kind + "." + CRDGroupVersion.String()
	KvStoreInstance_GroupVersionKind = CRDGroupVersion.WithKind(KvStoreInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&KvStoreInstance{}, &KvStoreInstanceList{})
}
